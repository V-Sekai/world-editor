name: Build Platform Target 
 
on: 
  push: 
    branches: [main] 
  pull_request: 
    branches: [main] 
    types: [opened, reopened, edited, synchronize] 
 
jobs: 
  build: 
    runs-on: ubuntu-latest 
    permissions: 
      pull-requests: write 
      actions: write 
    container: 
      image: fedora:39 
    env: 
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }} 
      GODOT_BASE_BRANCH: main 
      CACHE_NAME: v-sekai-world 
 
    strategy: 
      fail-fast: false 
      matrix: 
        platform: [linux, windows, android, web] 
        target: [editor, template_release, template_debug] 
 
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-${{ matrix.target }} 
      cancel-in-progress: true 
 
    steps: 
      - name: Set up dependencies 
        run: dnf install -y just git 
 
      - name: Checkout code 
        uses: actions/checkout@v4 
 
      - name: Cache SCons cache 
        uses: actions/cache@v4 
        if: always() 
        with: 
          path: | 
            .scons_cache  
            emsdk  
            osxcross  
            jdk  
            android_sdk  
            vulkan_sdk  
            mingw 
          key: ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }} 
          restore-keys: | 
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-refs/heads/${{ env.GODOT_BASE_BRANCH }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }} 
 
      - uses: bencherdev/bencher@main 
 
      - name: Fetch dependencies and Build Platform Target 
        run: | 
          just install_packages  
          export PLATFORM_ARGS=""  
          case "${{ matrix.platform }}" in  
            android)  
              PLATFORM_ARGS="fetch-openjdk setup-android-sdk"  
              ;;  
            web)  
              PLATFORM_ARGS="setup-emscripten"  
              ;;  
            windows)  
              PLATFORM_ARGS="fetch-llvm-mingw"  
              ;;  
            macos)  
              PLATFORM_ARGS="build-osxcross fetch-vulkan-sdk"  
              ;;  
            *)  
              PLATFORM_ARGS="nil"  
              ;;  
          esac  
          bencher run \ 
          --project 'v-sekai-world' \ 
          --adapter shell_hyperfine \ 
          --branch '${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}' \ 
          --testbed ubuntu-latest \ 
          --threshold-measure latency \ 
          --threshold-test t_test \ 
          --threshold-max-sample-size 64 \ 
          --threshold-upper-boundary 0.99 \ 
          --thresholds-reset \ 
          --ci-id ${{ runner.os }}-scons-${{ matrix.platform }}-${{ matrix.target }} \ 
          --err \ 
          --token '${{ secrets.BENCHER_API_TOKEN }}' \ 
          --github-actions '${{ secrets.GITHUB_TOKEN }}' \ 
          --ci-only-on-alert \ 
          --file results.json \ 
          "hyperfine --show-output --runs 1 --export-json results.json 'just $PLATFORM_ARGS && just build-platform-target ${{ matrix.platform }} ${{ matrix.target }}'" 
      - name: Upload Artifacts 
        uses: actions/upload-artifact@v4 
        with: 
          name: build-${{ matrix.platform }}-${{ matrix.target }} 
          path: godot/bin/* 
 
      - name: Upload TPZ File 
        uses: actions/upload-artifact@v4 
        with: 
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}.tpz 
          path: tpz 
 
      - name: Upload Godot Editor Files 
        uses: actions/upload-artifact@v4 
        with: 
          name: Godot-${{ matrix.platform }}-${{ matrix.target }} 
          path: editor 
 
  merge: 
    runs-on: ubuntu-latest 
    needs: build 
    steps: 
      - name: Merge Artifacts 
        uses: actions/upload-artifact/merge@v4 
        with: 
          name: v-sekai-world 
          delete-merged: true 
